"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const styles_1 = require("./styles");
function Match({ bottomHovered, bottomParty, bottomText, bottomWon, match, onMatchClick, onMouseEnter, onMouseLeave, onPartyClick, topHovered, topParty, topText, topWon, }) {
    return ((0, jsx_runtime_1.jsxs)(styles_1.Wrapper, { children: [(0, jsx_runtime_1.jsxs)("div", Object.assign({ style: { display: 'flex', justifyContent: 'space-between' } }, { children: [(0, jsx_runtime_1.jsx)(styles_1.TopText, { children: topText }), (match.href || typeof onMatchClick === 'function') && ((0, jsx_runtime_1.jsx)(styles_1.Anchor, Object.assign({ href: match.href, onClick: event => onMatchClick === null || onMatchClick === void 0 ? void 0 : onMatchClick({ match, topWon, bottomWon, event }) }, { children: (0, jsx_runtime_1.jsx)(styles_1.TopText, { children: "Match Details" }) })))] })), (0, jsx_runtime_1.jsxs)(styles_1.StyledMatch, { children: [(0, jsx_runtime_1.jsxs)(styles_1.Side, Object.assign({ onMouseEnter: () => onMouseEnter(topParty.id), onMouseLeave: onMouseLeave, won: topWon, hovered: topHovered, onClick: () => onPartyClick === null || onPartyClick === void 0 ? void 0 : onPartyClick(topParty, topWon) }, { children: [(0, jsx_runtime_1.jsx)(styles_1.Team, { children: topParty === null || topParty === void 0 ? void 0 : topParty.name }), (0, jsx_runtime_1.jsx)(styles_1.Score, Object.assign({ won: topWon }, { children: topParty === null || topParty === void 0 ? void 0 : topParty.resultText }))] })), (0, jsx_runtime_1.jsx)(styles_1.Line, { highlighted: topHovered || bottomHovered }), (0, jsx_runtime_1.jsxs)(styles_1.Side, Object.assign({ onMouseEnter: () => onMouseEnter(bottomParty.id), onMouseLeave: onMouseLeave, won: bottomWon, hovered: bottomHovered, onClick: () => onPartyClick === null || onPartyClick === void 0 ? void 0 : onPartyClick(bottomParty, bottomWon) }, { children: [(0, jsx_runtime_1.jsx)(styles_1.Team, { children: bottomParty === null || bottomParty === void 0 ? void 0 : bottomParty.name }), (0, jsx_runtime_1.jsx)(styles_1.Score, Object.assign({ won: bottomWon }, { children: bottomParty === null || bottomParty === void 0 ? void 0 : bottomParty.resultText }))] }))] }), (0, jsx_runtime_1.jsx)(styles_1.BottomText, { children: bottomText !== null && bottomText !== void 0 ? bottomText : ' ' })] }));
}
exports.default = Match;
//# sourceMappingURL=index.js.map